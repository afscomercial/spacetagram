{"version":3,"sources":["helper/getPictures.js","components/PictureItem.js","App.js","hooks/useFetchPictures.js","index.js"],"names":["getPictures","a","fetch","resp","json","data","images","map","img","imgURl","url","match","title","date","likes","PictureItem","pic","handleLike","className","style","backgroundImage","icon","faThumbsUp","onClick","App","useState","isLoading","loadLocalStorage","picturesState","setPicturesState","useEffect","localPictures","JSON","parse","localStorage","getItem","length","console","log","then","imgs","setItem","stringify","updatedPictures","useFetchPictures","picturesToShow","setPicturesToShow","picCount","setPicCount","sortPictures","useCallback","slice","handleCount","count","faSpinner","spin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29ac96b2.chunk.js","sourcesContent":["export const getPictures = async () => {\n  const url = `https://api.nasa.gov/planetary/apod?api_key=gJfg1fVQCoMkxd4EVncw4tIRutThDp5Q0fxQ8z9h&start_date=2021-12-23&end_date=2021-12-31`;\n  const resp = await fetch(url);\n  const data = await resp.json();\n  const images = data.map((img) => {\n    const imgURl =\n      img.url.match(/\\.(jpeg|jpg|gif|png)$/) != null\n        ? img.url\n        : 'https://upload.wikimedia.org/wikipedia/commons/e/e5/NASA_logo.svg';\n\n    return {\n      title: img.title,\n      date: img.date,\n      url: imgURl,\n      likes: 0\n    };\n  });\n\n  return images;\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\n\nexport const PictureItem = ({pic, handleLike}) => {\n  const { date, title, url, likes} = pic;\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <div\n        className='card__img'\n        style={{ backgroundImage: `url(${url})` }}\n      ></div>\n      <div className='card__data'>\n        <div className='card__data-title'> {title} </div>\n        <div className='card__data-date'> {date} </div>\n        <div className='card__data-like'>\n          <FontAwesomeIcon icon={faThumbsUp} className='btn-like' onClick={ () => handleLike(title)}/>\n          <span>{likes}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useFetchPictures } from './hooks/useFetchPictures';\nimport { PictureItem } from './components/PictureItem';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nexport const App = () => {\n  const { picturesState, handleLike} = useFetchPictures();\n  const { data, isLoading } = picturesState;\n  const [picturesToShow, setPicturesToShow] = useState([]);\n  const [picCount, setPicCount] = useState(9);\n \n  const sortPictures = useCallback(\n    () => {\n      if (!isLoading && data.length > 0) {\n        setPicturesToShow(data.slice(0, picCount));\n      }\n    },\n    [isLoading, data, picCount]\n  );\n\n  const handleCount = (count) =>{\n    setPicCount(count)\n  }\n\n  useEffect(() => {\n    sortPictures();\n  }, [sortPictures]);\n\n  \n  return (\n    <>\n      <header>\n        <h1>Spacestagram</h1>\n        <h2>Image-sharing from the final frontier</h2>\n      </header>\n      <nav>\n        <div>Number of photos:</div>\n        <button className='num-btn ' onClick={() => handleCount(3)}>\n          3\n        </button>\n        <button className='num-btn' onClick={() => handleCount(6)}>\n          6\n        </button>\n        <button className='num-btn' onClick={() => handleCount(9)}>\n          9\n        </button>\n      </nav>\n\n      <main>\n        {isLoading && (\n          <FontAwesomeIcon icon={faSpinner} spin className='spinner' />\n        )}\n        {!isLoading && (\n          <div className='card-grid'>\n            {picturesToShow.map((pic) => (\n              <PictureItem key={pic.title} pic={pic} handleLike={handleLike} />\n            ))}\n          </div>\n        )}\n      </main>\n\n      <footer>\n        <hr />\n        An app to share photos of the last 9 days of 2021 from APOD one of\n        NASAâ€™s image APIs.\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","import { useState, useEffect } from 'react';\nimport { getPictures } from '../helper/getPictures';\n\nexport const useFetchPictures = () => {\n\n  const [picturesState, setPicturesState] = useState({\n    data: [],\n    isLoading: true,\n    loadLocalStorage: false\n  });\n  const { data, loadLocalStorage} = picturesState;\n\n  useEffect(() => {\n    const localPictures = JSON.parse(localStorage.getItem('pictures'));\n    if (!localPictures || localPictures.length < 1) {\n      console.log('fetch data')\n      getPictures().then((imgs) => {\n        setPicturesState({\n          data: imgs,\n          isLoading: false,\n          loadLocalStorage: true\n        });\n      });\n    } else {\n      setPicturesState({\n        data: localPictures,\n        isLoading: false,\n        loadLocalStorage: false\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if(loadLocalStorage){\n      console.log('load')\n      localStorage.setItem('pictures', JSON.stringify(data));\n    }\n  }, [data, loadLocalStorage]);\n\n  const handleLike = (title) => {\n    const updatedPictures = picturesState.data.map((pic) => {\n      if (pic.title === title) {\n        return {\n          ...pic,\n          likes: (pic.likes<1) ? ++pic.likes : --pic.likes,\n        };\n      } else {\n        return pic;\n      }\n    });\n\n    setPicturesState({\n      data: updatedPictures,\n      isLoading: false,\n      loadLocalStorage: true\n    });\n  };\n\n  return { picturesState, handleLike };\n};\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}